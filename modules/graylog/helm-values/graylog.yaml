tags:
  # If true, this chart will install Elasticsearch from requirement dependencies
  install-elasticsearch: false
  # If true, this chart will install MongoDB replicaset from requirement dependencies
  install-mongodb: true

graylog:
  replicas: ${graylog_replicas}

  service:
    ## Add additional ports for the service/statefulset to expose
    ##
    ports:
      - name: prometheus
        port: 9833
        protocol: TCP
        targetPort: 9833

  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/api/metrics/prometheus"
    prometheus.io/port: "9833"

  config: |
    prometheus_exporter_enabled = true
    prometheus_exporter_bind_address = 0.0.0.0:9833

  ## Pod affinity
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - graylog
            topologyKey: topology.kubernetes.io/zone
          weight: 100

  persistence:
    ## If true, Graylog will create/use a Persistent Volume Claim
    ## If false, use emptyDir
    ##
    enabled: true
    ## Graylog data Persistent Volume access modes
    ## Must match those of existing PV or dynamic provisioner
    ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    accessMode: ReadWriteOnce
    ## Graylog data Persistent Volume size
    ##
    size: "${graylog_storage_size_gi}Gi"
    ## Graylog data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: "${storage_class}"

  ## Additional input ports for receiving logs from servers
  ## Note: Name must be in IANA_SVC_NAME (at most 15 characters, matching regex [a-z0-9]([a-z0-9-]*[a-z0-9])* and it must contains at least one letter [a-z], hyphens cannot be adjacent to other hyphens)
  ## Note: Array must be sorted by port order
  ##
  input:
    tcp:
      service:
        name: ${gryalog_beats_service_name}
        type: ClusterIP
      ports:
        - name: beats
          port: ${beats_port}

  ## External URL to access Graylog at
  ##
  externalUri: "${graylog_host}"

  ingress:
    ## If true, Graylog server Ingress will be created
    ##
    enabled: true
    ## Graylog server Ingress annotations
    ##
    annotations:
      kubernetes.io/ingress.class: "${ingress_class}"

    ## Graylog server Ingress hostnames with optional path
    ## Must be provided if Ingress is enabled
    ## Note: Graylog does not support two URL. You can specify only single URL
    ##
    hosts:
      - ${graylog_host}


  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    limits:
      cpu: "1"
    requests:
      cpu: "500m"
      memory: "1024Mi"

  metrics:
    ## If true, prometheus annotations will be attached
    ##
    enabled: false

  ## Graylog root user name
  ##
  rootUsername: "${root_username}"

  ## Graylog existing root secret
  ##
  existingRootSecret: "${graylog_root_password_secret}"

  elasticsearch:
    ## Major version of the Elasticsearch version used.
    ## It is required by Graylog 4. See https://docs.graylog.org/en/4.0/pages/configuration/elasticsearch.html#available-elasticsearch-configuration-tunables
    version: "${elasticsearch_version}"
    # Allow elasticsearch hosts to be fetched from a k8s secret
    # {{ graylog.fullname }}-es will be used as uriSecretName if left empty
    uriSecretName: "${elasticsearch_uri_secret}"
    uriSecretKey: "${elasticsearch_uri_secret_key}"
    uriSSL: true

mongodb:
  architecture: "replicaset"
  useStatefulSet: true
  replicaCount: 1
  auth:
    enabled: false
  persistence:
    enabled: true
    storageClass: "${storage_class}"
    accessModes:
      - ReadWriteOnce
    size: ${mongo_db_storage_size_gi}Gi
